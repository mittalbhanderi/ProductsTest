{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Products/product/product.component.html","webpack:///./src/app/Products/product/product.component.ts","webpack:///./src/app/Products/products.service.ts","webpack:///./src/app/Products/products/products.component.html","webpack:///./src/app/Products/products/products.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-card class=\\\"product\\\">\\n  <mat-card-header>\\n    <mat-card-title> {{product.id}} {{product.productName}}</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <div class=\\\"product-content\\\">      \\n      <div class=\\\"product-model\\\">Model Code: <span class=\\\"code\\\">{{product.modelCode}}</span></div>\\n      <div class=\\\"product-sn\\\">Serial Number: <span class=\\\"number\\\">{{product.serialNumber}}</span></div>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Product } from '../products.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html'\n})\nexport class ProductComponent implements OnInit {\n\n  @Input()\n  product: Product;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient }      from '@angular/common/http';\n\nexport class Product {\n  constructor(public id: number, \n              public productName: string,\n              public modelCode: string, \n              public serialNumber:string){\n\n  }\n\n}\n\nconst FETCH_LATENCY: number = 500;\nconst API_URL:string = 'http://localhost:50324/v1';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService implements OnDestroy {\n  \n  constructor(private http: HttpClient) { console.log('ProductsService instance created.'); }\n\n  getProducts():Observable<Product[]> {\n    return this\n            .http\n            .get<Product[]>(`${API_URL}/products`);\n  }\n  \n  ngOnDestroy() { console.log('ProductsService instance destroyed.'); }\n\n}\n","module.exports = \"<ng-container *ngIf=\\\"products; else noProductsTemplate\\\">\\n  <app-product *ngFor=\\\"let product of products\\\" [product]=\\\"product\\\"></app-product>\\n</ng-container>\\n<ng-template #noProductsTemplate>\\n  Product Service Unavailable. Please contact your administrator.\\n</ng-template>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ProductsService, Product } from '../products.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html'\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor(private productsService: ProductsService) { }\n\n  products$:Observable<Product[]>;\n  products: Product[];\n\n  ngOnInit() {\n    this.products$ = this.productsService.getProducts();\n    \n    this.products$.subscribe((data: Product[]) => {\n                                        this.products = data;\n                                        console.log(data);},\n                              error => console.log(error));\n  }\n\n}\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Samsung Products\\n  </h1>\\n  <app-products></app-products>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'Samsung Test';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\n/* Modules */\nimport { HttpClientModule } from '@angular/common/http'; \nimport { MatCardModule } from '@angular/material/card';\n\n/* App Root */\nimport { AppComponent } from './app.component';\n\n/* Components */\nimport { ProductsComponent } from './Products/products/products.component';\nimport { ProductComponent } from './Products/product/product.component';\n\n/* Services */\nimport { ProductsService } from './Products/products.service';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatCardModule\n  ],\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    ProductComponent\n  ],\n  providers: [ProductsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}